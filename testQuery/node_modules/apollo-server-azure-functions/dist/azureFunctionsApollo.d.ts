/// <reference types="@types/node" />
import { IHttpContext, IFunctionRequest, HttpStatusCodes } from 'azure-functions-typescript';
import { GraphQLOptions } from 'apollo-server-core';
import { GraphiQLData } from 'apollo-server-module-graphiql';
export interface AzureFunctionsGraphQLOptionsFunction {
    (context: IHttpContext): GraphQLOptions | Promise<GraphQLOptions>;
}
export interface AzureFunctionsHandler {
    (context: IHttpContext, request: IFunctionRequest): void;
}
export interface IHeaders {
    'content-type'?: string;
    'content-length'?: HttpStatusCodes | number;
    'content-disposition'?: string;
    'content-encoding'?: string;
    'content-language'?: string;
    'content-range'?: string;
    'content-location'?: string;
    'content-md5'?: Buffer;
    expires?: Date;
    'last-modified'?: Date;
    [header: string]: any;
}
export interface AzureFunctionsGraphiQLOptionsFunction {
    (context: IHttpContext, request: IFunctionRequest): GraphiQLData | Promise<GraphiQLData>;
}
export declare function graphqlAzureFunctions(options: GraphQLOptions | AzureFunctionsGraphQLOptionsFunction): AzureFunctionsHandler;
export declare function graphiqlAzureFunctions(options: GraphiQLData | AzureFunctionsGraphiQLOptionsFunction): (httpContext: any, request: any) => void;
