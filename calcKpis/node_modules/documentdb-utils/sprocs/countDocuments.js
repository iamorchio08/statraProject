// Generated by CoffeeScript 1.9.2
(function() {
  module.exports = function(memo) {
    var collection, onReadDocuments, query, setBody;
    collection = getContext().getCollection();
    if (memo == null) {
      memo = {};
    }
    if (memo.count == null) {
      memo.count = 0;
    }
    if (memo.continuation == null) {
      memo.continuation = null;
    }
    if (memo.example == null) {
      memo.example = null;
    }
    memo.stillQueueing = true;
    query = function() {
      var responseOptions;
      if (memo.stillQueueing) {
        responseOptions = {
          continuation: memo.continuation,
          pageSize: 1000
        };
        if (memo.filterQuery != null) {
          memo.stillQueueing = collection.queryDocuments(collection.getSelfLink(), memo.filterQuery, responseOptions, onReadDocuments);
        } else {
          memo.stillQueueing = collection.readDocuments(collection.getSelfLink(), responseOptions, onReadDocuments);
        }
      }
      return setBody();
    };
    onReadDocuments = function(err, resources, options) {
      var count;
      if (err) {
        throw err;
      }
      count = resources.length;
      memo.count += count;
      memo.example = resources[0];
      if (options.continuation != null) {
        memo.continuation = options.continuation;
        return query();
      } else {
        memo.continuation = null;
        return setBody();
      }
    };
    setBody = function() {
      return getContext().getResponse().setBody(memo);
    };
    query();
    return memo;
  };

}).call(this);
